{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanch\\\\Desktop\\\\italks\\\\italks-frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ButtonTest, List } from './components';\n\nfunction App() {\n  const [statusGet, setStatusGet] = useState(false);\n  const [loadingGet, setLoadingGet] = useState(false);\n  const [statusPost, setStatusPost] = useState(false);\n  const [loadingPost, setLoadingPost] = useState(false);\n  const [valueInput, setValueInput] = useState('');\n  const [list, setList] = useState(null);\n\n  const getList = () => {\n    setLoadingGet(true);\n    setStatusGet(false);\n    setTimeout(() => {\n      axios.get('http://127.0.0.1:8000/api/tests/') // url\n      .then(response => {\n        // console.log('====== Output GET started ======');\n        console.log(response.data); // console.log('====== Output GET completed ======');\n\n        setList(response.data);\n        setStatusGet(true);\n      }).catch(error => {\n        console.log(error);\n        setStatusGet(false);\n      }).finally(() => {\n        setLoadingGet(false);\n      });\n    }, 0);\n  };\n\n  const postMessage = () => {\n    if (!valueInput) {\n      setTimeout(() => {\n        alert('Пустое поле!');\n      }, 0);\n      return;\n    }\n\n    setLoadingPost(true);\n    setStatusPost(false);\n    setTimeout(() => {\n      axios.post('http://127.0.0.1:8000/api/tests/', {\n        name: valueInput\n      }).then(response => {\n        console.log('====== Output POST started ======');\n        console.log(valueInput);\n        console.log('====== Output POST completed ======');\n        setValueInput('');\n        setTimeout(() => {\n          setStatusPost(true);\n        }, 0);\n      }).catch(error => {\n        console.log(error);\n        setStatusPost(false);\n      }).finally(() => {\n        setLoadingPost(false);\n      });\n    }, 0);\n  };\n\n  useEffect(() => {\n    setStatusPost(false);\n    setStatusPGet(false);\n  }, [valueInput]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, \"\\u0412\\u044B\\u0432\\u043E\\u0434 \\u0432 \\u043A\\u043E\\u043D\\u0441\\u043E\\u043B\\u0438\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"get\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonTest, {\n    onClick: getList,\n    text: loadingGet ? 'Загрузка...' : statusGet ? 'Данные получены' : 'Получить данные',\n    style: statusGet ? {\n      backgroundColor: '#a1ffa4'\n    } : {},\n    disabled: loadingGet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), list && /*#__PURE__*/React.createElement(List, {\n    values: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => {\n      setValueInput(e.target.value);\n    },\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0447\\u0442\\u043E-\\u043D\\u0438\\u0431\\u0443\\u0434\\u044C\",\n    value: valueInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ButtonTest, {\n    onClick: postMessage,\n    text: loadingPost ? 'Отправка...' : statusPost ? 'Данные отправлены' : 'Отправить данные',\n    style: statusPost ? {\n      backgroundColor: '#a1ffa4'\n    } : {},\n    disabled: loadingPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Sanch/Desktop/italks/italks-frontend/src/App.js"],"names":["React","useState","useEffect","axios","ButtonTest","List","App","statusGet","setStatusGet","loadingGet","setLoadingGet","statusPost","setStatusPost","loadingPost","setLoadingPost","valueInput","setValueInput","list","setList","getList","setTimeout","get","then","response","console","log","data","catch","error","finally","postMessage","alert","post","name","setStatusPGet","backgroundColor","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { ButtonTest, List } from './components';\n\nfunction App() {\n  const [statusGet, setStatusGet] = useState(false);\n  const [loadingGet, setLoadingGet] = useState(false);\n  const [statusPost, setStatusPost] = useState(false);\n  const [loadingPost, setLoadingPost] = useState(false);\n  const [valueInput, setValueInput] = useState('');\n  const [list, setList] = useState(null);\n\n  const getList = () => {\n    setLoadingGet(true);\n    setStatusGet(false);\n    setTimeout(() => {\n      axios\n        .get('http://127.0.0.1:8000/api/tests/') // url\n        .then((response) => {\n          // console.log('====== Output GET started ======');\n          console.log(response.data);\n          // console.log('====== Output GET completed ======');\n          setList(response.data);\n          setStatusGet(true);\n        })\n        .catch((error) => {\n          console.log(error);\n          setStatusGet(false);\n        })\n        .finally(() => {\n          setLoadingGet(false);\n        });\n    }, 0);\n  };\n\n  const postMessage = () => {\n    if (!valueInput) {\n      setTimeout(() => { alert('Пустое поле!'); }, 0);\n      return;\n    }\n    setLoadingPost(true);\n    setStatusPost(false);\n    setTimeout(() => {\n      axios\n        .post('http://127.0.0.1:8000/api/tests/', {\n          name: valueInput\n        })\n        .then((response) => {\n          console.log('====== Output POST started ======');\n          console.log(valueInput);\n          console.log('====== Output POST completed ======');\n          setValueInput('');\n          setTimeout(() => { setStatusPost(true); }, 0)\n        })\n        .catch((error) => {\n          console.log(error);\n          setStatusPost(false);\n        })\n        .finally(() => {\n          setLoadingPost(false);\n        });\n    }, 0);\n  };\n\n  useEffect(() => {\n    setStatusPost(false);\n    setStatusPGet(false);\n  }, [valueInput]);\n\n  return (\n    <div className='main'>\n      Вывод в консоли\n      <div className='get'>\n        <ButtonTest\n          onClick={getList}\n          text={loadingGet ? 'Загрузка...' : statusGet ? 'Данные получены' : 'Получить данные'}\n          style={statusGet ? { backgroundColor: '#a1ffa4' } : {}}\n          disabled={loadingGet}\n        />\n        {list &&\n          <List\n            values={list}\n          />}\n      </div>\n      <div className='post'>\n        <input\n          onChange={(e) => {\n            setValueInput(e.target.value);\n          }}\n          placeholder='Введите что-нибудь'\n          value={valueInput}\n        />\n        <ButtonTest\n          onClick={postMessage}\n          text={loadingPost ? 'Отправка...' : statusPost ? 'Данные отправлены' : 'Отправить данные'}\n          style={statusPost ? { backgroundColor: '#a1ffa4' } : {}}\n          disabled={loadingPost}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}