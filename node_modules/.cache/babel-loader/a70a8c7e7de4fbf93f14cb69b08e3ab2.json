{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanch\\\\Desktop\\\\italks\\\\italks-frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { ButtonTest } from './components';\n\nfunction App() {\n  const [statusGet, setStatusGet] = useState(false);\n  const [loadingGet, setLoadingGet] = useState(false);\n  const [statusPost, setStatusPost] = useState(false);\n  const [loadingPost, setLoadingPost] = useState(false);\n  const [valueInput, setValueInput] = useState('');\n\n  const getList = () => {\n    setLoadingGet(true);\n    setStatusGet(false);\n    setTimeout(() => {\n      axios.get('http://127.0.0.1:8000/api/tests/') // url\n      .then(response => {\n        console.log('====== Output started ======');\n        console.log(response.data);\n        setStatusGet(true);\n      }).catch(error => {\n        console.log(error);\n        setStatusGet(false);\n      }).finally(() => {\n        console.log('====== Output completed ======');\n        setLoadingGet(false);\n      });\n    }, 1000);\n  };\n\n  const postMessage = () => {\n    setLoadingPost(true);\n    setStatusGet(false);\n    setTimeout(() => {\n      axios.get('http://127.0.0.1:8000/api/tests/') // url\n      .then(response => {\n        console.log('====== Output started ======');\n        console.log(response.data);\n        setStatusGet(true);\n      }).catch(error => {\n        console.log(error);\n        setStatusGet(false);\n      }).finally(() => {\n        console.log('====== Output completed ======');\n        setLoadingGet(false);\n      });\n    }, 1000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"\\u0412\\u044B\\u0432\\u043E\\u0434 \\u0432 \\u043A\\u043E\\u043D\\u0441\\u043E\\u043B\\u0438\", /*#__PURE__*/React.createElement(ButtonTest, {\n    onClick: getList,\n    text: loadingGet ? 'Загрузка...' : statusGet ? 'Данные получены' : 'Получить данные',\n    style: statusGet ? {\n      backgroundColor: '#a1ffa4'\n    } : {},\n    disabled: loadingGet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0447\\u0442\\u043E-\\u043D\\u0438\\u0431\\u0443\\u0434\\u044C\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ButtonTest, {\n    onClick: getList,\n    text: loadingGet ? 'Отправка...' : statusGet ? 'Данные отправлены' : 'Отправить данные',\n    style: statusGet ? {\n      backgroundColor: '#a1ffa4'\n    } : {},\n    disabled: loadingGet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Sanch/Desktop/italks/italks-frontend/src/App.js"],"names":["React","useState","axios","ButtonTest","App","statusGet","setStatusGet","loadingGet","setLoadingGet","statusPost","setStatusPost","loadingPost","setLoadingPost","valueInput","setValueInput","getList","setTimeout","get","then","response","console","log","data","catch","error","finally","postMessage","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport { ButtonTest } from './components';\n\nfunction App() {\n  const [statusGet, setStatusGet] = useState(false);\n  const [loadingGet, setLoadingGet] = useState(false);\n  const [statusPost, setStatusPost] = useState(false);\n  const [loadingPost, setLoadingPost] = useState(false);\n  const [valueInput, setValueInput] = useState('');\n\n  const getList = () => {\n    setLoadingGet(true);\n    setStatusGet(false);\n    setTimeout(() => {\n      axios\n        .get('http://127.0.0.1:8000/api/tests/') // url\n        .then((response) => {\n          console.log('====== Output started ======');\n          console.log(response.data);\n          setStatusGet(true);\n        })\n        .catch((error) => {\n          console.log(error);\n          setStatusGet(false);\n        })\n        .finally(() => {\n          console.log('====== Output completed ======');\n          setLoadingGet(false);\n        });\n    }, 1000);\n  };\n\n  const postMessage = () => {\n    setLoadingPost(true);\n    setStatusGet(false);\n    setTimeout(() => {\n      axios\n        .get('http://127.0.0.1:8000/api/tests/') // url\n        .then((response) => {\n          console.log('====== Output started ======');\n          console.log(response.data);\n          setStatusGet(true);\n        })\n        .catch((error) => {\n          console.log(error);\n          setStatusGet(false);\n        })\n        .finally(() => {\n          console.log('====== Output completed ======');\n          setLoadingGet(false);\n        });\n    }, 1000);\n  };\n\n  return (\n    <div className='main'>\n      Вывод в консоли\n      <ButtonTest\n        onClick={getList}\n        text={loadingGet ? 'Загрузка...' : statusGet ? 'Данные получены' : 'Получить данные'}\n        style={statusGet ? { backgroundColor: '#a1ffa4' } : {}}\n        disabled={loadingGet}\n      />\n      <div className='post'>\n        <input placeholder='Введите что-нибудь' value='' />\n        <ButtonTest\n          onClick={getList}\n          text={loadingGet ? 'Отправка...' : statusGet ? 'Данные отправлены' : 'Отправить данные'}\n          style={statusGet ? { backgroundColor: '#a1ffa4' } : {}}\n          disabled={loadingGet}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}