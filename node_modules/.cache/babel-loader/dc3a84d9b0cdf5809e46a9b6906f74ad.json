{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanch\\\\Desktop\\\\italks\\\\italks-frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { ButtonTest } from './components';\n\nfunction App() {\n  const [statusGet, setStatusGet] = useState(false);\n  const [loadingGet, setLoadingGet] = useState(null);\n\n  const getList = () => {\n    setLoadingGet(true);\n    setStatusGet(false);\n    setTimeout(() => {\n      axios.get('http://127.0.0.1:8000/api/tests/') // url\n      .then(response => {\n        console.log('====== Output started ======');\n        console.log(response.data);\n        setStatusGet(true);\n      }).catch(error => {\n        console.log(error);\n        setStatusGet(false);\n      }).finally(() => {\n        console.log('====== Output completed ======');\n        setLoadingGet(false);\n      });\n    }, 1000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"\\u0412\\u044B\\u0432\\u043E\\u0434 \\u0432 \\u043A\\u043E\\u043D\\u0441\\u043E\\u043B\\u0438\", /*#__PURE__*/React.createElement(ButtonTest, {\n    onClick: getList,\n    text: loadingGet ? 'Загрузка...' : statusGet ? 'Данные получены' : 'Получить данные',\n    style: statusGet ? {\n      backgroundColor: '#a1ffa4'\n    } : {},\n    disabled: loadingGet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), \"input.\");\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Sanch/Desktop/italks/italks-frontend/src/App.js"],"names":["React","useState","axios","ButtonTest","App","statusGet","setStatusGet","loadingGet","setLoadingGet","getList","setTimeout","get","then","response","console","log","data","catch","error","finally","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMQ,OAAO,GAAG,MAAM;AACpBD,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,IAAAA,UAAU,CAAC,MAAM;AACfR,MAAAA,KAAK,CACFS,GADH,CACO,kCADP,EAC2C;AAD3C,OAEGC,IAFH,CAESC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAV,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OANH,EAOGW,KAPH,CAOUC,KAAD,IAAW;AAChBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAVH,EAWGa,OAXH,CAWW,MAAM;AACbL,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAP,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAdH;AAeD,KAhBS,EAgBP,IAhBO,CAAV;AAiBD,GApBD;;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sGAEE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,IAAI,EAAEF,UAAU,GAAG,aAAH,GAAmBF,SAAS,GAAG,iBAAH,GAAuB,iBAFrE;AAGE,IAAA,KAAK,EAAEA,SAAS,GAAG;AAAEe,MAAAA,eAAe,EAAE;AAAnB,KAAH,GAAoC,EAHtD;AAIE,IAAA,QAAQ,EAAEb,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,WADF;AAYD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport { ButtonTest } from './components';\n\nfunction App() {\n  const [statusGet, setStatusGet] = useState(false);\n  const [loadingGet, setLoadingGet] = useState(null);\n\n  const getList = () => {\n    setLoadingGet(true);\n    setStatusGet(false);\n    setTimeout(() => {\n      axios\n        .get('http://127.0.0.1:8000/api/tests/') // url\n        .then((response) => {\n          console.log('====== Output started ======');\n          console.log(response.data);\n          setStatusGet(true);\n        })\n        .catch((error) => {\n          console.log(error);\n          setStatusGet(false);\n        })\n        .finally(() => {\n          console.log('====== Output completed ======');\n          setLoadingGet(false);\n        });\n    }, 1000);\n  };\n\n  return (\n    <div className='main'>\n      Вывод в консоли\n      <ButtonTest\n        onClick={getList}\n        text={loadingGet ? 'Загрузка...' : statusGet ? 'Данные получены' : 'Получить данные'}\n        style={statusGet ? { backgroundColor: '#a1ffa4' } : {}}\n        disabled={loadingGet}\n      />\n      input.\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}