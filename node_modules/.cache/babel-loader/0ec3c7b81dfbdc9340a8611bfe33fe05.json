{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanch\\\\Desktop\\\\italks\\\\italks-frontend\\\\src\\\\components\\\\ButtonTest\\\\index.jsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ButtonText = () => {\n  const [statusGet, setStatusGet] = useState(false);\n  const [loadingGet, setLoadingGet] = useState(null);\n\n  const handlerClick = () => {\n    setLoadingGet(true);\n    setStatusGet(false);\n    setTimeout(() => {\n      axios.get('') // url\n      .then(response => {\n        console.log(response.data);\n        setStatusGet(true);\n      }).catch(error => {\n        console.log(error);\n        setStatusGet(false);\n      }).finally(() => {\n        setLoadingGet(false);\n      });\n    }, 1000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlerClick,\n    disabled: loadingGet,\n    style: statusGet ? {\n      backgroundColor: '#a1ffa4'\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, loadingGet ? 'Загрузка...' : statusGet ? 'Данные получены' : 'Получить данные'));\n};\n\nexport default ButtonText;","map":{"version":3,"sources":["C:/Users/Sanch/Desktop/italks/italks-frontend/src/components/ButtonTest/index.jsx"],"names":["React","useState","axios","ButtonText","statusGet","setStatusGet","loadingGet","setLoadingGet","handlerClick","setTimeout","get","then","response","console","log","data","catch","error","finally","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMO,YAAY,GAAG,MAAM;AACzBD,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,IAAAA,UAAU,CAAC,MAAM;AACfP,MAAAA,KAAK,CACJQ,GADD,CACK,EADL,EACS;AADT,OAECC,IAFD,CAEOC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAV,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OALD,EAMCW,KAND,CAMQC,KAAD,IAAW;AAChBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OATD,EAUCa,OAVD,CAUS,MAAM;AACbX,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAZD;AAaD,KAdS,EAcP,IAdO,CAAV;AAeD,GAlBD;;AAoBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAEC,YADX;AAEE,IAAA,QAAQ,EAAEF,UAFZ;AAGE,IAAA,KAAK,EAAEF,SAAS,GAAG;AAAEe,MAAAA,eAAe,EAAE;AAAnB,KAAH,GAAoC,EAHtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGb,UAAU,GAAG,aAAH,GAAmBF,SAAS,GAAG,iBAAH,GAAuB,iBALhE,CADF,CADF;AAcD,CAtCD;;AAwCA,eAAeD,UAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst ButtonText = () => {\r\n  const [statusGet, setStatusGet] = useState(false);\r\n  const [loadingGet, setLoadingGet] = useState(null);\r\n\r\n  const handlerClick = () => {\r\n    setLoadingGet(true);\r\n    setStatusGet(false);\r\n    setTimeout(() => {\r\n      axios\r\n      .get('') // url\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setStatusGet(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setStatusGet(false);\r\n      })\r\n      .finally(() => {\r\n        setLoadingGet(false);\r\n      });\r\n    }, 1000)    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={handlerClick}\r\n        disabled={loadingGet}\r\n        style={statusGet ? { backgroundColor: '#a1ffa4' } : {}}\r\n      >\r\n        {loadingGet ? 'Загрузка...' : statusGet ? 'Данные получены' : 'Получить данные'}\r\n      </button>\r\n      {/* <button onClick={handlerClick}>Отправить данные</button>\r\n      <button onClick={handlerClick}>Удалить данные</button>\r\n      <button onClick={handlerClick}>Изменить данные</button> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ButtonText"]},"metadata":{},"sourceType":"module"}